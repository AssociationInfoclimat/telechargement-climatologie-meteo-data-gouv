import { HoraireLine, parseCSV } from '@/csv/horaires/parseCSV.js';
import { CodeSynop } from '@/csv/horaires/value-objects/CodeSynop.js';
import { CodeTemps } from '@/csv/horaires/value-objects/CodeTemps.js';
import { Etat } from '@/csv/horaires/value-objects/Etat.js';
import { HouleDirection } from '@/csv/horaires/value-objects/HouleDirection.js';
import { Visibility } from '@/csv/horaires/value-objects/Visibility.js';
import { CodeQualite } from '@/data/value-objects/CodeQualite.js';
import { Octa } from '@/data/value-objects/Octa.js';
import { Percentage } from '@/data/value-objects/Percentage.js';
import { PositiveFloat } from '@/data/value-objects/PositiveFloat.js';
import { PositiveInteger } from '@/data/value-objects/PositiveInteger.js';
import { Time } from '@/data/value-objects/Time.js';
import { UVIndex } from '@/data/value-objects/UVIndex.js';
import { WindDirection } from '@/data/value-objects/WindDirection.js';
import { NumeroPoste } from '@/postes/NumeroPoste.js';
import { describe, expect, it } from 'vitest';

export function* arrayGenerator<T>(array: T[]): Generator<T> {
    for (const item of array) {
        yield item;
    }
}

describe('parseCSV', () => {
    describe('parseCSV', () => {
        it('should parse the CSV', () => {
            const csvLines = arrayGenerator([
                'NUM_POSTE;NOM_USUEL;LAT;LON;ALTI;AAAAMMJJHH;RR1;QRR1;DRR1;QDRR1;FF;QFF;DD;QDD;FXY;QFXY;DXY;QDXY;HXY;QHXY;FXI;QFXI;DXI;QDXI;HXI;QHXI;FF2;QFF2;DD2;QDD2;FXI2;QFXI2;DXI2;QDXI2;HXI2;QHXI2;FXI3S;QFXI3S;DXI3S;QDXI3S;HFXI3S;QHFXI3S;T;QT;TD;QTD;TN;QTN;HTN;QHTN;TX;QTX;HTX;QHTX;DG;QDG;T10;QT10;T20;QT20;T50;QT50;T100;QT100;TNSOL;QTNSOL;TN50;QTN50;TCHAUSSEE;QTCHAUSSEE;DHUMEC;QDHUMEC;U;QU;UN;QUN;HUN;QHUN;UX;QUX;HUX;QHUX;DHUMI40;QDHUMI40;DHUMI80;QDHUMI80;TSV;QTSV;PMER;QPMER;PSTAT;QPSTAT;PMERMIN;QPERMIN;GEOP;QGEOP;N;QN;NBAS;QNBAS;CL;QCL;CM;QCM;CH;QCH;N1;QN1;C1;QC1;B1;QB1;N2;QN2;C2;QC2;B2;QCB2;N3;QN3;C3;QC3;B3;QB3;N4;QN4;C4;QC4;B4;QB4;VV;QVV;DVV200;QDVV200;WW;QWW;W1;QW1;W2;QW2;SOL;QSOL;SOLNG;QSOLNG;TMER;QTMER;VVMER;QVVMER;ETATMER;QETATMER;DIRHOULE;QDIRHOULE;HVAGUE;QHVAGUE;PVAGUE;QPVAGUE;HNEIGEF;QHNEIGEF;NEIGETOT;QNEIGETOT;TSNEIGE;QTSNEIGE;TUBENEIGE;QTUBENEIGE;HNEIGEFI3;QHNEIGEFI3;HNEIGEFI1;QHNEIGEFI1;ESNEIGE;QESNEIGE;CHARGENEIGE;QCHARGENEIGE;GLO;QGLO;GLO2;QGLO2;DIR;QDIR;DIR2;QDIR2;DIF;QDIF;DIF2;QDIF2;UV;QUV;UV2;QUV2;UV_INDICE;QUV_INDICE;INFRAR;QINFRAR;INFRAR2;QINFRAR2;INS;QINS;INS2;QINS2;TLAGON;QTLAGON;TVEGETAUX;QTVEGETAUX;ECOULEMENT;QECOULEMENT',
                '01014002;ARBENT;46.278167;5.669000;534;2023010100;0.0;1;;;2.6;1;200;1;4.1;1;170;1;2313;9;8.8;1;160;1;2317;9;;;;;;;;;;;7.7;9;;;2317;9;12.3;1;7.6;1;11.9;1;2345;9;12.9;1;2308;9;0;9;;;;;;;;;;;;;;;;;73;1;71;1;2312;9;75;1;2345;9;0;9;0;9;10.4;1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0;9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
                '01014002;ARBENT;46.278167;5.669000;534;2023010101;0.0;1;;;2.2;1;170;1;4.0;1;160;1;40;9;8.3;1;150;1;31;9;;;;;;;;;;;7.1;9;;;31;9;12.0;1;7.6;1;12.0;1;16;9;12.5;1;41;9;0;9;;;;;;;;;;;;;;;;;74;1;73;1;1;9;75;1;27;9;0;9;0;9;10.4;1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0;9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
                '01014002;ARBENT;46.278167;5.669000;534;2023010102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
                '01014002;ARBENT;46.278167;5.669000;534;2023010103;3.3;0;4;1;3.3;2;359;9;3.3;0;359;1;1230;2;3.3;9;359;0;1230;1;3.3;2;359;9;3.3;0;359;1;1230;2;3.3;9;359;0;1230;1;-5.5;2;-5.5;9;-5.5;0;1230;1;-5.5;2;1230;9;4;0;-5.5;1;-5.5;2;-5.5;9;-5.5;0;-5.5;1;-5.5;2;-5.5;9;4;0;100;1;100;2;1230;9;100;0;1230;1;4;2;4;9;3.3;0;3.3;1;3.3;2;3.3;9;4;0;8;1;8;2;/;9;/;0;/;1;8;2;/;9;4;0;8;1;/;2;4;9;8;0;/;1;4;2;8;9;/;0;4;1;4;2;4;9;99;0;99;1;99;2;7;9;7;0;-5.5;1;6;2;7;9;999;0;3.3;1;3.3;2;4;9;4;0;3.3;1;4;2;4;9;4;0;7;1;4;2;4;9;4;0;4;1;4;2;4;9;4;0;4;1;4;2;12;9;4;0;4;1;4;2;4;9;-5.5;0;-5.5;1;-5.5;2',
                '',
            ]);
            const horaireLines = Array.from(parseCSV(csvLines));
            expect(horaireLines).toEqual<HoraireLine[]>([
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJHH: new Date('2023-01-01T00:00:00Z'),
                    RR1: PositiveFloat.of(0),
                    QRR1: CodeQualite.of(PositiveInteger.of(1)),
                    DRR1: PositiveInteger.of(null),
                    QDRR1: CodeQualite.of(PositiveInteger.of(null)),
                    FF: PositiveFloat.of(2.6),
                    QFF: CodeQualite.of(PositiveInteger.of(1)),
                    DD: WindDirection.of(PositiveInteger.of(200)),
                    QDD: CodeQualite.of(PositiveInteger.of(1)),
                    FXY: PositiveFloat.of(4.1),
                    QFXY: CodeQualite.of(PositiveInteger.of(1)),
                    DXY: WindDirection.of(PositiveInteger.of(170)),
                    QDXY: CodeQualite.of(PositiveInteger.of(1)),
                    HXY: Time.of('2313'),
                    QHXY: CodeQualite.of(PositiveInteger.of(9)),
                    FXI: PositiveFloat.of(8.8),
                    QFXI: CodeQualite.of(PositiveInteger.of(1)),
                    DXI: WindDirection.of(PositiveInteger.of(160)),
                    QDXI: CodeQualite.of(PositiveInteger.of(1)),
                    HXI: Time.of('2317'),
                    QHXI: CodeQualite.of(PositiveInteger.of(9)),
                    FF2: PositiveFloat.of(null),
                    QFF2: CodeQualite.of(PositiveInteger.of(null)),
                    DD2: WindDirection.of(PositiveInteger.of(null)),
                    QDD2: CodeQualite.of(PositiveInteger.of(null)),
                    FXI2: PositiveFloat.of(null),
                    QFXI2: CodeQualite.of(PositiveInteger.of(null)),
                    DXI2: WindDirection.of(PositiveInteger.of(null)),
                    QDXI2: CodeQualite.of(PositiveInteger.of(null)),
                    HXI2: Time.of(''),
                    QHXI2: CodeQualite.of(PositiveInteger.of(null)),
                    FXI3S: PositiveFloat.of(7.7),
                    QFXI3S: CodeQualite.of(PositiveInteger.of(9)),
                    DXI3S: WindDirection.of(PositiveInteger.of(null)),
                    QDXI3S: CodeQualite.of(PositiveInteger.of(null)),
                    HFXI3S: Time.of('2317'),
                    QHFXI3S: CodeQualite.of(PositiveInteger.of(9)),
                    T: 12.3,
                    QT: CodeQualite.of(PositiveInteger.of(1)),
                    TD: 7.6,
                    QTD: CodeQualite.of(PositiveInteger.of(1)),
                    TN: 11.9,
                    QTN: CodeQualite.of(PositiveInteger.of(1)),
                    HTN: Time.of('2345'),
                    QHTN: CodeQualite.of(PositiveInteger.of(9)),
                    TX: 12.9,
                    QTX: CodeQualite.of(PositiveInteger.of(1)),
                    HTX: Time.of('2308'),
                    QHTX: CodeQualite.of(PositiveInteger.of(9)),
                    DG: PositiveInteger.of(0),
                    QDG: CodeQualite.of(PositiveInteger.of(9)),
                    T10: null,
                    QT10: CodeQualite.of(PositiveInteger.of(null)),
                    T20: null,
                    QT20: CodeQualite.of(PositiveInteger.of(null)),
                    T50: null,
                    QT50: CodeQualite.of(PositiveInteger.of(null)),
                    T100: null,
                    QT100: CodeQualite.of(PositiveInteger.of(null)),
                    TNSOL: null,
                    QTNSOL: CodeQualite.of(PositiveInteger.of(null)),
                    TN50: null,
                    QTN50: CodeQualite.of(PositiveInteger.of(null)),
                    TCHAUSSEE: null,
                    QTCHAUSSEE: CodeQualite.of(PositiveInteger.of(null)),
                    DHUMEC: PositiveInteger.of(null),
                    QDHUMEC: CodeQualite.of(PositiveInteger.of(null)),
                    U: Percentage.of(PositiveInteger.of(73)),
                    QU: CodeQualite.of(PositiveInteger.of(1)),
                    UN: Percentage.of(PositiveInteger.of(71)),
                    QUN: CodeQualite.of(PositiveInteger.of(1)),
                    HUN: Time.of('2312'),
                    QHUN: CodeQualite.of(PositiveInteger.of(9)),
                    UX: Percentage.of(PositiveInteger.of(75)),
                    QUX: CodeQualite.of(PositiveInteger.of(1)),
                    HUX: Time.of('2345'),
                    QHUX: CodeQualite.of(PositiveInteger.of(9)),
                    DHUMI40: PositiveInteger.of(0),
                    QDHUMI40: CodeQualite.of(PositiveInteger.of(9)),
                    DHUMI80: PositiveInteger.of(0),
                    QDHUMI80: CodeQualite.of(PositiveInteger.of(9)),
                    TSV: PositiveFloat.of(10.4),
                    QTSV: CodeQualite.of(PositiveInteger.of(1)),
                    PMER: PositiveFloat.of(null),
                    QPMER: CodeQualite.of(PositiveInteger.of(null)),
                    PSTAT: PositiveFloat.of(null),
                    QPSTAT: CodeQualite.of(PositiveInteger.of(null)),
                    PMERMIN: PositiveFloat.of(null),
                    QPERMIN: CodeQualite.of(PositiveInteger.of(null)),
                    GEOP: PositiveInteger.of(null),
                    QGEOP: CodeQualite.of(PositiveInteger.of(null)),
                    N: Octa.of(PositiveInteger.of(null)),
                    QN: CodeQualite.of(PositiveInteger.of(null)),
                    NBAS: Octa.of(PositiveInteger.of(null)),
                    QNBAS: CodeQualite.of(PositiveInteger.of(null)),
                    CL: CodeSynop.of(''),
                    QCL: CodeQualite.of(PositiveInteger.of(null)),
                    CM: CodeSynop.of(''),
                    QCM: CodeQualite.of(PositiveInteger.of(null)),
                    CH: CodeSynop.of(''),
                    QCH: CodeQualite.of(PositiveInteger.of(null)),
                    N1: Octa.of(PositiveInteger.of(null)),
                    QN1: CodeQualite.of(PositiveInteger.of(null)),
                    C1: CodeSynop.of(''),
                    QC1: CodeQualite.of(PositiveInteger.of(null)),
                    B1: PositiveInteger.of(null),
                    QB1: CodeQualite.of(PositiveInteger.of(null)),
                    N2: Octa.of(PositiveInteger.of(null)),
                    QN2: CodeQualite.of(PositiveInteger.of(null)),
                    C2: CodeSynop.of(''),
                    QC2: CodeQualite.of(PositiveInteger.of(null)),
                    B2: PositiveInteger.of(null),
                    QCB2: CodeQualite.of(PositiveInteger.of(null)),
                    N3: Octa.of(PositiveInteger.of(null)),
                    QN3: CodeQualite.of(PositiveInteger.of(null)),
                    C3: CodeSynop.of(''),
                    QC3: CodeQualite.of(PositiveInteger.of(null)),
                    B3: PositiveInteger.of(null),
                    QB3: CodeQualite.of(PositiveInteger.of(null)),
                    N4: Octa.of(PositiveInteger.of(null)),
                    QN4: CodeQualite.of(PositiveInteger.of(null)),
                    C4: CodeSynop.of(''),
                    QC4: CodeQualite.of(PositiveInteger.of(null)),
                    B4: PositiveInteger.of(null),
                    QB4: CodeQualite.of(PositiveInteger.of(null)),
                    VV: PositiveInteger.of(null),
                    QVV: CodeQualite.of(PositiveInteger.of(null)),
                    DVV200: PositiveInteger.of(null),
                    QDVV200: CodeQualite.of(PositiveInteger.of(null)),
                    WW: CodeTemps.of(''),
                    QWW: CodeQualite.of(PositiveInteger.of(null)),
                    W1: CodeTemps.of(''),
                    QW1: CodeQualite.of(PositiveInteger.of(null)),
                    W2: CodeTemps.of(''),
                    QW2: CodeQualite.of(PositiveInteger.of(null)),
                    SOL: Etat.of(PositiveInteger.of(null)),
                    QSOL: CodeQualite.of(PositiveInteger.of(null)),
                    SOLNG: Etat.of(PositiveInteger.of(null)),
                    QSOLNG: CodeQualite.of(PositiveInteger.of(null)),
                    TMER: null,
                    QTMER: CodeQualite.of(PositiveInteger.of(null)),
                    VVMER: Visibility.of(PositiveInteger.of(null)),
                    QVVMER: CodeQualite.of(PositiveInteger.of(null)),
                    ETATMER: Etat.of(PositiveInteger.of(null)),
                    QETATMER: CodeQualite.of(PositiveInteger.of(null)),
                    DIRHOULE: HouleDirection.of(PositiveInteger.of(null)),
                    QDIRHOULE: CodeQualite.of(PositiveInteger.of(null)),
                    HVAGUE: PositiveFloat.of(null),
                    QHVAGUE: CodeQualite.of(PositiveInteger.of(null)),
                    PVAGUE: PositiveFloat.of(null),
                    QPVAGUE: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEF: PositiveInteger.of(null),
                    QHNEIGEF: CodeQualite.of(PositiveInteger.of(null)),
                    NEIGETOT: PositiveInteger.of(0),
                    QNEIGETOT: CodeQualite.of(PositiveInteger.of(9)),
                    TSNEIGE: PositiveFloat.of(null),
                    QTSNEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    TUBENEIGE: PositiveInteger.of(null),
                    QTUBENEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEFI3: PositiveInteger.of(null),
                    QHNEIGEFI3: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEFI1: PositiveInteger.of(null),
                    QHNEIGEFI1: CodeQualite.of(PositiveInteger.of(null)),
                    ESNEIGE: Etat.of(PositiveInteger.of(null)),
                    QESNEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    CHARGENEIGE: PositiveInteger.of(null),
                    QCHARGENEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    GLO: PositiveInteger.of(null),
                    QGLO: CodeQualite.of(PositiveInteger.of(null)),
                    GLO2: PositiveInteger.of(null),
                    QGLO2: CodeQualite.of(PositiveInteger.of(null)),
                    DIR: PositiveInteger.of(null),
                    QDIR: CodeQualite.of(PositiveInteger.of(null)),
                    DIR2: PositiveInteger.of(null),
                    QDIR2: CodeQualite.of(PositiveInteger.of(null)),
                    DIF: PositiveInteger.of(null),
                    QDIF: CodeQualite.of(PositiveInteger.of(null)),
                    DIF2: PositiveInteger.of(null),
                    QDIF2: CodeQualite.of(PositiveInteger.of(null)),
                    UV: PositiveInteger.of(null),
                    QUV: CodeQualite.of(PositiveInteger.of(null)),
                    UV2: PositiveInteger.of(null),
                    QUV2: CodeQualite.of(PositiveInteger.of(null)),
                    UV_INDICE: UVIndex.of(PositiveInteger.of(null)),
                    QUV_INDICE: CodeQualite.of(PositiveInteger.of(null)),
                    INFRAR: PositiveInteger.of(null),
                    QINFRAR: CodeQualite.of(PositiveInteger.of(null)),
                    INFRAR2: PositiveInteger.of(null),
                    QINFRAR2: CodeQualite.of(PositiveInteger.of(null)),
                    INS: PositiveInteger.of(null),
                    QINS: CodeQualite.of(PositiveInteger.of(null)),
                    INS2: PositiveInteger.of(null),
                    QINS2: CodeQualite.of(PositiveInteger.of(null)),
                    TLAGON: null,
                    QTLAGON: CodeQualite.of(PositiveInteger.of(null)),
                    TVEGETAUX: null,
                    QTVEGETAUX: CodeQualite.of(PositiveInteger.of(null)),
                    ECOULEMENT: null,
                    QECOULEMENT: CodeQualite.of(PositiveInteger.of(null)),
                },
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJHH: new Date('2023-01-01T01:00:00Z'),
                    RR1: PositiveFloat.of(0),
                    QRR1: CodeQualite.of(PositiveInteger.of(1)),
                    DRR1: PositiveInteger.of(null),
                    QDRR1: CodeQualite.of(PositiveInteger.of(null)),
                    FF: PositiveFloat.of(2.2),
                    QFF: CodeQualite.of(PositiveInteger.of(1)),
                    DD: WindDirection.of(PositiveInteger.of(170)),
                    QDD: CodeQualite.of(PositiveInteger.of(1)),
                    FXY: PositiveFloat.of(4.0),
                    QFXY: CodeQualite.of(PositiveInteger.of(1)),
                    DXY: WindDirection.of(PositiveInteger.of(160)),
                    QDXY: CodeQualite.of(PositiveInteger.of(1)),
                    HXY: Time.of('0040'),
                    QHXY: CodeQualite.of(PositiveInteger.of(9)),
                    FXI: PositiveFloat.of(8.3),
                    QFXI: CodeQualite.of(PositiveInteger.of(1)),
                    DXI: WindDirection.of(PositiveInteger.of(150)),
                    QDXI: CodeQualite.of(PositiveInteger.of(1)),
                    HXI: Time.of('0031'),
                    QHXI: CodeQualite.of(PositiveInteger.of(9)),
                    FF2: PositiveFloat.of(null),
                    QFF2: CodeQualite.of(PositiveInteger.of(null)),
                    DD2: WindDirection.of(PositiveInteger.of(null)),
                    QDD2: CodeQualite.of(PositiveInteger.of(null)),
                    FXI2: PositiveFloat.of(null),
                    QFXI2: CodeQualite.of(PositiveInteger.of(null)),
                    DXI2: WindDirection.of(PositiveInteger.of(null)),
                    QDXI2: CodeQualite.of(PositiveInteger.of(null)),
                    HXI2: Time.of(''),
                    QHXI2: CodeQualite.of(PositiveInteger.of(null)),
                    FXI3S: PositiveFloat.of(7.1),
                    QFXI3S: CodeQualite.of(PositiveInteger.of(9)),
                    DXI3S: WindDirection.of(PositiveInteger.of(null)),
                    QDXI3S: CodeQualite.of(PositiveInteger.of(null)),
                    HFXI3S: Time.of('0031'),
                    QHFXI3S: CodeQualite.of(PositiveInteger.of(9)),
                    T: 12.0,
                    QT: CodeQualite.of(PositiveInteger.of(1)),
                    TD: 7.6,
                    QTD: CodeQualite.of(PositiveInteger.of(1)),
                    TN: 12.0,
                    QTN: CodeQualite.of(PositiveInteger.of(1)),
                    HTN: Time.of('0016'),
                    QHTN: CodeQualite.of(PositiveInteger.of(9)),
                    TX: 12.5,
                    QTX: CodeQualite.of(PositiveInteger.of(1)),
                    HTX: Time.of('0041'),
                    QHTX: CodeQualite.of(PositiveInteger.of(9)),
                    DG: PositiveInteger.of(0),
                    QDG: CodeQualite.of(PositiveInteger.of(9)),
                    T10: null,
                    QT10: CodeQualite.of(PositiveInteger.of(null)),
                    T20: null,
                    QT20: CodeQualite.of(PositiveInteger.of(null)),
                    T50: null,
                    QT50: CodeQualite.of(PositiveInteger.of(null)),
                    T100: null,
                    QT100: CodeQualite.of(PositiveInteger.of(null)),
                    TNSOL: null,
                    QTNSOL: CodeQualite.of(PositiveInteger.of(null)),
                    TN50: null,
                    QTN50: CodeQualite.of(PositiveInteger.of(null)),
                    TCHAUSSEE: null,
                    QTCHAUSSEE: CodeQualite.of(PositiveInteger.of(null)),
                    DHUMEC: PositiveInteger.of(null),
                    QDHUMEC: CodeQualite.of(PositiveInteger.of(null)),
                    U: Percentage.of(PositiveInteger.of(74)),
                    QU: CodeQualite.of(PositiveInteger.of(1)),
                    UN: Percentage.of(PositiveInteger.of(73)),
                    QUN: CodeQualite.of(PositiveInteger.of(1)),
                    HUN: Time.of('0001'),
                    QHUN: CodeQualite.of(PositiveInteger.of(9)),
                    UX: Percentage.of(PositiveInteger.of(75)),
                    QUX: CodeQualite.of(PositiveInteger.of(1)),
                    HUX: Time.of('0027'),
                    QHUX: CodeQualite.of(PositiveInteger.of(9)),
                    DHUMI40: PositiveInteger.of(0),
                    QDHUMI40: CodeQualite.of(PositiveInteger.of(9)),
                    DHUMI80: PositiveInteger.of(0),
                    QDHUMI80: CodeQualite.of(PositiveInteger.of(9)),
                    TSV: PositiveFloat.of(10.4),
                    QTSV: CodeQualite.of(PositiveInteger.of(1)),
                    PMER: PositiveFloat.of(null),
                    QPMER: CodeQualite.of(PositiveInteger.of(null)),
                    PSTAT: PositiveFloat.of(null),
                    QPSTAT: CodeQualite.of(PositiveInteger.of(null)),
                    PMERMIN: PositiveFloat.of(null),
                    QPERMIN: CodeQualite.of(PositiveInteger.of(null)),
                    GEOP: PositiveInteger.of(null),
                    QGEOP: CodeQualite.of(PositiveInteger.of(null)),
                    N: Octa.of(PositiveInteger.of(null)),
                    QN: CodeQualite.of(PositiveInteger.of(null)),
                    NBAS: Octa.of(PositiveInteger.of(null)),
                    QNBAS: CodeQualite.of(PositiveInteger.of(null)),
                    CL: CodeSynop.of(''),
                    QCL: CodeQualite.of(PositiveInteger.of(null)),
                    CM: CodeSynop.of(''),
                    QCM: CodeQualite.of(PositiveInteger.of(null)),
                    CH: CodeSynop.of(''),
                    QCH: CodeQualite.of(PositiveInteger.of(null)),
                    N1: Octa.of(PositiveInteger.of(null)),
                    QN1: CodeQualite.of(PositiveInteger.of(null)),
                    C1: CodeSynop.of(''),
                    QC1: CodeQualite.of(PositiveInteger.of(null)),
                    B1: PositiveInteger.of(null),
                    QB1: CodeQualite.of(PositiveInteger.of(null)),
                    N2: Octa.of(PositiveInteger.of(null)),
                    QN2: CodeQualite.of(PositiveInteger.of(null)),
                    C2: CodeSynop.of(''),
                    QC2: CodeQualite.of(PositiveInteger.of(null)),
                    B2: PositiveInteger.of(null),
                    QCB2: CodeQualite.of(PositiveInteger.of(null)),
                    N3: Octa.of(PositiveInteger.of(null)),
                    QN3: CodeQualite.of(PositiveInteger.of(null)),
                    C3: CodeSynop.of(''),
                    QC3: CodeQualite.of(PositiveInteger.of(null)),
                    B3: PositiveInteger.of(null),
                    QB3: CodeQualite.of(PositiveInteger.of(null)),
                    N4: Octa.of(PositiveInteger.of(null)),
                    QN4: CodeQualite.of(PositiveInteger.of(null)),
                    C4: CodeSynop.of(''),
                    QC4: CodeQualite.of(PositiveInteger.of(null)),
                    B4: PositiveInteger.of(null),
                    QB4: CodeQualite.of(PositiveInteger.of(null)),
                    VV: PositiveInteger.of(null),
                    QVV: CodeQualite.of(PositiveInteger.of(null)),
                    DVV200: PositiveInteger.of(null),
                    QDVV200: CodeQualite.of(PositiveInteger.of(null)),
                    WW: CodeTemps.of(''),
                    QWW: CodeQualite.of(PositiveInteger.of(null)),
                    W1: CodeTemps.of(''),
                    QW1: CodeQualite.of(PositiveInteger.of(null)),
                    W2: CodeTemps.of(''),
                    QW2: CodeQualite.of(PositiveInteger.of(null)),
                    SOL: Etat.of(PositiveInteger.of(null)),
                    QSOL: CodeQualite.of(PositiveInteger.of(null)),
                    SOLNG: Etat.of(PositiveInteger.of(null)),
                    QSOLNG: CodeQualite.of(PositiveInteger.of(null)),
                    TMER: null,
                    QTMER: CodeQualite.of(PositiveInteger.of(null)),
                    VVMER: Visibility.of(PositiveInteger.of(null)),
                    QVVMER: CodeQualite.of(PositiveInteger.of(null)),
                    ETATMER: Etat.of(PositiveInteger.of(null)),
                    QETATMER: CodeQualite.of(PositiveInteger.of(null)),
                    DIRHOULE: HouleDirection.of(PositiveInteger.of(null)),
                    QDIRHOULE: CodeQualite.of(PositiveInteger.of(null)),
                    HVAGUE: PositiveFloat.of(null),
                    QHVAGUE: CodeQualite.of(PositiveInteger.of(null)),
                    PVAGUE: PositiveFloat.of(null),
                    QPVAGUE: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEF: PositiveInteger.of(null),
                    QHNEIGEF: CodeQualite.of(PositiveInteger.of(null)),
                    NEIGETOT: PositiveInteger.of(0),
                    QNEIGETOT: CodeQualite.of(PositiveInteger.of(9)),
                    TSNEIGE: PositiveFloat.of(null),
                    QTSNEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    TUBENEIGE: PositiveInteger.of(null),
                    QTUBENEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEFI3: PositiveInteger.of(null),
                    QHNEIGEFI3: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEFI1: PositiveInteger.of(null),
                    QHNEIGEFI1: CodeQualite.of(PositiveInteger.of(null)),
                    ESNEIGE: Etat.of(PositiveInteger.of(null)),
                    QESNEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    CHARGENEIGE: PositiveInteger.of(null),
                    QCHARGENEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    GLO: PositiveInteger.of(null),
                    QGLO: CodeQualite.of(PositiveInteger.of(null)),
                    GLO2: PositiveInteger.of(null),
                    QGLO2: CodeQualite.of(PositiveInteger.of(null)),
                    DIR: PositiveInteger.of(null),
                    QDIR: CodeQualite.of(PositiveInteger.of(null)),
                    DIR2: PositiveInteger.of(null),
                    QDIR2: CodeQualite.of(PositiveInteger.of(null)),
                    DIF: PositiveInteger.of(null),
                    QDIF: CodeQualite.of(PositiveInteger.of(null)),
                    DIF2: PositiveInteger.of(null),
                    QDIF2: CodeQualite.of(PositiveInteger.of(null)),
                    UV: PositiveInteger.of(null),
                    QUV: CodeQualite.of(PositiveInteger.of(null)),
                    UV2: PositiveInteger.of(null),
                    QUV2: CodeQualite.of(PositiveInteger.of(null)),
                    UV_INDICE: UVIndex.of(PositiveInteger.of(null)),
                    QUV_INDICE: CodeQualite.of(PositiveInteger.of(null)),
                    INFRAR: PositiveInteger.of(null),
                    QINFRAR: CodeQualite.of(PositiveInteger.of(null)),
                    INFRAR2: PositiveInteger.of(null),
                    QINFRAR2: CodeQualite.of(PositiveInteger.of(null)),
                    INS: PositiveInteger.of(null),
                    QINS: CodeQualite.of(PositiveInteger.of(null)),
                    INS2: PositiveInteger.of(null),
                    QINS2: CodeQualite.of(PositiveInteger.of(null)),
                    TLAGON: null,
                    QTLAGON: CodeQualite.of(PositiveInteger.of(null)),
                    TVEGETAUX: null,
                    QTVEGETAUX: CodeQualite.of(PositiveInteger.of(null)),
                    ECOULEMENT: null,
                    QECOULEMENT: CodeQualite.of(PositiveInteger.of(null)),
                },
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJHH: new Date('2023-01-01T02:00:00Z'),
                    RR1: PositiveFloat.of(null),
                    QRR1: CodeQualite.of(PositiveInteger.of(null)),
                    DRR1: PositiveInteger.of(null),
                    QDRR1: CodeQualite.of(PositiveInteger.of(null)),
                    FF: PositiveFloat.of(null),
                    QFF: CodeQualite.of(PositiveInteger.of(null)),
                    DD: WindDirection.of(PositiveInteger.of(null)),
                    QDD: CodeQualite.of(PositiveInteger.of(null)),
                    FXY: PositiveFloat.of(null),
                    QFXY: CodeQualite.of(PositiveInteger.of(null)),
                    DXY: WindDirection.of(PositiveInteger.of(null)),
                    QDXY: CodeQualite.of(PositiveInteger.of(null)),
                    HXY: Time.of(''),
                    QHXY: CodeQualite.of(PositiveInteger.of(null)),
                    FXI: PositiveFloat.of(null),
                    QFXI: CodeQualite.of(PositiveInteger.of(null)),
                    DXI: WindDirection.of(PositiveInteger.of(null)),
                    QDXI: CodeQualite.of(PositiveInteger.of(null)),
                    HXI: Time.of(''),
                    QHXI: CodeQualite.of(PositiveInteger.of(null)),
                    FF2: PositiveFloat.of(null),
                    QFF2: CodeQualite.of(PositiveInteger.of(null)),
                    DD2: WindDirection.of(PositiveInteger.of(null)),
                    QDD2: CodeQualite.of(PositiveInteger.of(null)),
                    FXI2: PositiveFloat.of(null),
                    QFXI2: CodeQualite.of(PositiveInteger.of(null)),
                    DXI2: WindDirection.of(PositiveInteger.of(null)),
                    QDXI2: CodeQualite.of(PositiveInteger.of(null)),
                    HXI2: Time.of(''),
                    QHXI2: CodeQualite.of(PositiveInteger.of(null)),
                    FXI3S: PositiveFloat.of(null),
                    QFXI3S: CodeQualite.of(PositiveInteger.of(null)),
                    DXI3S: WindDirection.of(PositiveInteger.of(null)),
                    QDXI3S: CodeQualite.of(PositiveInteger.of(null)),
                    HFXI3S: Time.of(''),
                    QHFXI3S: CodeQualite.of(PositiveInteger.of(null)),
                    T: null,
                    QT: CodeQualite.of(PositiveInteger.of(null)),
                    TD: null,
                    QTD: CodeQualite.of(PositiveInteger.of(null)),
                    TN: null,
                    QTN: CodeQualite.of(PositiveInteger.of(null)),
                    HTN: Time.of(''),
                    QHTN: CodeQualite.of(PositiveInteger.of(null)),
                    TX: null,
                    QTX: CodeQualite.of(PositiveInteger.of(null)),
                    HTX: Time.of(''),
                    QHTX: CodeQualite.of(PositiveInteger.of(null)),
                    DG: PositiveInteger.of(null),
                    QDG: CodeQualite.of(PositiveInteger.of(null)),
                    T10: null,
                    QT10: CodeQualite.of(PositiveInteger.of(null)),
                    T20: null,
                    QT20: CodeQualite.of(PositiveInteger.of(null)),
                    T50: null,
                    QT50: CodeQualite.of(PositiveInteger.of(null)),
                    T100: null,
                    QT100: CodeQualite.of(PositiveInteger.of(null)),
                    TNSOL: null,
                    QTNSOL: CodeQualite.of(PositiveInteger.of(null)),
                    TN50: null,
                    QTN50: CodeQualite.of(PositiveInteger.of(null)),
                    TCHAUSSEE: null,
                    QTCHAUSSEE: CodeQualite.of(PositiveInteger.of(null)),
                    DHUMEC: PositiveInteger.of(null),
                    QDHUMEC: CodeQualite.of(PositiveInteger.of(null)),
                    U: Percentage.of(PositiveInteger.of(null)),
                    QU: CodeQualite.of(PositiveInteger.of(null)),
                    UN: Percentage.of(PositiveInteger.of(null)),
                    QUN: CodeQualite.of(PositiveInteger.of(null)),
                    HUN: Time.of(''),
                    QHUN: CodeQualite.of(PositiveInteger.of(null)),
                    UX: Percentage.of(PositiveInteger.of(null)),
                    QUX: CodeQualite.of(PositiveInteger.of(null)),
                    HUX: Time.of(''),
                    QHUX: CodeQualite.of(PositiveInteger.of(null)),
                    DHUMI40: PositiveInteger.of(null),
                    QDHUMI40: CodeQualite.of(PositiveInteger.of(null)),
                    DHUMI80: PositiveInteger.of(null),
                    QDHUMI80: CodeQualite.of(PositiveInteger.of(null)),
                    TSV: PositiveFloat.of(null),
                    QTSV: CodeQualite.of(PositiveInteger.of(null)),
                    PMER: PositiveFloat.of(null),
                    QPMER: CodeQualite.of(PositiveInteger.of(null)),
                    PSTAT: PositiveFloat.of(null),
                    QPSTAT: CodeQualite.of(PositiveInteger.of(null)),
                    PMERMIN: PositiveFloat.of(null),
                    QPERMIN: CodeQualite.of(PositiveInteger.of(null)),
                    GEOP: PositiveInteger.of(null),
                    QGEOP: CodeQualite.of(PositiveInteger.of(null)),
                    N: Octa.of(PositiveInteger.of(null)),
                    QN: CodeQualite.of(PositiveInteger.of(null)),
                    NBAS: Octa.of(PositiveInteger.of(null)),
                    QNBAS: CodeQualite.of(PositiveInteger.of(null)),
                    CL: CodeSynop.of(''),
                    QCL: CodeQualite.of(PositiveInteger.of(null)),
                    CM: CodeSynop.of(''),
                    QCM: CodeQualite.of(PositiveInteger.of(null)),
                    CH: CodeSynop.of(''),
                    QCH: CodeQualite.of(PositiveInteger.of(null)),
                    N1: Octa.of(PositiveInteger.of(null)),
                    QN1: CodeQualite.of(PositiveInteger.of(null)),
                    C1: CodeSynop.of(''),
                    QC1: CodeQualite.of(PositiveInteger.of(null)),
                    B1: PositiveInteger.of(null),
                    QB1: CodeQualite.of(PositiveInteger.of(null)),
                    N2: Octa.of(PositiveInteger.of(null)),
                    QN2: CodeQualite.of(PositiveInteger.of(null)),
                    C2: CodeSynop.of(''),
                    QC2: CodeQualite.of(PositiveInteger.of(null)),
                    B2: PositiveInteger.of(null),
                    QCB2: CodeQualite.of(PositiveInteger.of(null)),
                    N3: Octa.of(PositiveInteger.of(null)),
                    QN3: CodeQualite.of(PositiveInteger.of(null)),
                    C3: CodeSynop.of(''),
                    QC3: CodeQualite.of(PositiveInteger.of(null)),
                    B3: PositiveInteger.of(null),
                    QB3: CodeQualite.of(PositiveInteger.of(null)),
                    N4: Octa.of(PositiveInteger.of(null)),
                    QN4: CodeQualite.of(PositiveInteger.of(null)),
                    C4: CodeSynop.of(''),
                    QC4: CodeQualite.of(PositiveInteger.of(null)),
                    B4: PositiveInteger.of(null),
                    QB4: CodeQualite.of(PositiveInteger.of(null)),
                    VV: PositiveInteger.of(null),
                    QVV: CodeQualite.of(PositiveInteger.of(null)),
                    DVV200: PositiveInteger.of(null),
                    QDVV200: CodeQualite.of(PositiveInteger.of(null)),
                    WW: CodeTemps.of(''),
                    QWW: CodeQualite.of(PositiveInteger.of(null)),
                    W1: CodeTemps.of(''),
                    QW1: CodeQualite.of(PositiveInteger.of(null)),
                    W2: CodeTemps.of(''),
                    QW2: CodeQualite.of(PositiveInteger.of(null)),
                    SOL: Etat.of(PositiveInteger.of(null)),
                    QSOL: CodeQualite.of(PositiveInteger.of(null)),
                    SOLNG: Etat.of(PositiveInteger.of(null)),
                    QSOLNG: CodeQualite.of(PositiveInteger.of(null)),
                    TMER: null,
                    QTMER: CodeQualite.of(PositiveInteger.of(null)),
                    VVMER: Visibility.of(PositiveInteger.of(null)),
                    QVVMER: CodeQualite.of(PositiveInteger.of(null)),
                    ETATMER: Etat.of(PositiveInteger.of(null)),
                    QETATMER: CodeQualite.of(PositiveInteger.of(null)),
                    DIRHOULE: HouleDirection.of(PositiveInteger.of(null)),
                    QDIRHOULE: CodeQualite.of(PositiveInteger.of(null)),
                    HVAGUE: PositiveFloat.of(null),
                    QHVAGUE: CodeQualite.of(PositiveInteger.of(null)),
                    PVAGUE: PositiveFloat.of(null),
                    QPVAGUE: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEF: PositiveInteger.of(null),
                    QHNEIGEF: CodeQualite.of(PositiveInteger.of(null)),
                    NEIGETOT: PositiveInteger.of(null),
                    QNEIGETOT: CodeQualite.of(PositiveInteger.of(null)),
                    TSNEIGE: PositiveFloat.of(null),
                    QTSNEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    TUBENEIGE: PositiveInteger.of(null),
                    QTUBENEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEFI3: PositiveInteger.of(null),
                    QHNEIGEFI3: CodeQualite.of(PositiveInteger.of(null)),
                    HNEIGEFI1: PositiveInteger.of(null),
                    QHNEIGEFI1: CodeQualite.of(PositiveInteger.of(null)),
                    ESNEIGE: Etat.of(PositiveInteger.of(null)),
                    QESNEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    CHARGENEIGE: PositiveInteger.of(null),
                    QCHARGENEIGE: CodeQualite.of(PositiveInteger.of(null)),
                    GLO: PositiveInteger.of(null),
                    QGLO: CodeQualite.of(PositiveInteger.of(null)),
                    GLO2: PositiveInteger.of(null),
                    QGLO2: CodeQualite.of(PositiveInteger.of(null)),
                    DIR: PositiveInteger.of(null),
                    QDIR: CodeQualite.of(PositiveInteger.of(null)),
                    DIR2: PositiveInteger.of(null),
                    QDIR2: CodeQualite.of(PositiveInteger.of(null)),
                    DIF: PositiveInteger.of(null),
                    QDIF: CodeQualite.of(PositiveInteger.of(null)),
                    DIF2: PositiveInteger.of(null),
                    QDIF2: CodeQualite.of(PositiveInteger.of(null)),
                    UV: PositiveInteger.of(null),
                    QUV: CodeQualite.of(PositiveInteger.of(null)),
                    UV2: PositiveInteger.of(null),
                    QUV2: CodeQualite.of(PositiveInteger.of(null)),
                    UV_INDICE: UVIndex.of(PositiveInteger.of(null)),
                    QUV_INDICE: CodeQualite.of(PositiveInteger.of(null)),
                    INFRAR: PositiveInteger.of(null),
                    QINFRAR: CodeQualite.of(PositiveInteger.of(null)),
                    INFRAR2: PositiveInteger.of(null),
                    QINFRAR2: CodeQualite.of(PositiveInteger.of(null)),
                    INS: PositiveInteger.of(null),
                    QINS: CodeQualite.of(PositiveInteger.of(null)),
                    INS2: PositiveInteger.of(null),
                    QINS2: CodeQualite.of(PositiveInteger.of(null)),
                    TLAGON: null,
                    QTLAGON: CodeQualite.of(PositiveInteger.of(null)),
                    TVEGETAUX: null,
                    QTVEGETAUX: CodeQualite.of(PositiveInteger.of(null)),
                    ECOULEMENT: null,
                    QECOULEMENT: CodeQualite.of(PositiveInteger.of(null)),
                },
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJHH: new Date('2023-01-01T03:00:00Z'),
                    RR1: PositiveFloat.of(3.3),
                    QRR1: CodeQualite.of(PositiveInteger.of(0)),
                    DRR1: PositiveInteger.of(4),
                    QDRR1: CodeQualite.of(PositiveInteger.of(1)),
                    FF: PositiveFloat.of(3.3),
                    QFF: CodeQualite.of(PositiveInteger.of(2)),
                    DD: WindDirection.of(PositiveInteger.of(359)),
                    QDD: CodeQualite.of(PositiveInteger.of(9)),
                    FXY: PositiveFloat.of(3.3),
                    QFXY: CodeQualite.of(PositiveInteger.of(0)),
                    DXY: WindDirection.of(PositiveInteger.of(359)),
                    QDXY: CodeQualite.of(PositiveInteger.of(1)),
                    HXY: Time.of('1230'),
                    QHXY: CodeQualite.of(PositiveInteger.of(2)),
                    FXI: PositiveFloat.of(3.3),
                    QFXI: CodeQualite.of(PositiveInteger.of(9)),
                    DXI: WindDirection.of(PositiveInteger.of(359)),
                    QDXI: CodeQualite.of(PositiveInteger.of(0)),
                    HXI: Time.of('1230'),
                    QHXI: CodeQualite.of(PositiveInteger.of(1)),
                    FF2: PositiveFloat.of(3.3),
                    QFF2: CodeQualite.of(PositiveInteger.of(2)),
                    DD2: WindDirection.of(PositiveInteger.of(359)),
                    QDD2: CodeQualite.of(PositiveInteger.of(9)),
                    FXI2: PositiveFloat.of(3.3),
                    QFXI2: CodeQualite.of(PositiveInteger.of(0)),
                    DXI2: WindDirection.of(PositiveInteger.of(359)),
                    QDXI2: CodeQualite.of(PositiveInteger.of(1)),
                    HXI2: Time.of('1230'),
                    QHXI2: CodeQualite.of(PositiveInteger.of(2)),
                    FXI3S: PositiveFloat.of(3.3),
                    QFXI3S: CodeQualite.of(PositiveInteger.of(9)),
                    DXI3S: WindDirection.of(PositiveInteger.of(359)),
                    QDXI3S: CodeQualite.of(PositiveInteger.of(0)),
                    HFXI3S: Time.of('1230'),
                    QHFXI3S: CodeQualite.of(PositiveInteger.of(1)),
                    T: -5.5,
                    QT: CodeQualite.of(PositiveInteger.of(2)),
                    TD: -5.5,
                    QTD: CodeQualite.of(PositiveInteger.of(9)),
                    TN: -5.5,
                    QTN: CodeQualite.of(PositiveInteger.of(0)),
                    HTN: Time.of('1230'),
                    QHTN: CodeQualite.of(PositiveInteger.of(1)),
                    TX: -5.5,
                    QTX: CodeQualite.of(PositiveInteger.of(2)),
                    HTX: Time.of('1230'),
                    QHTX: CodeQualite.of(PositiveInteger.of(9)),
                    DG: PositiveInteger.of(4),
                    QDG: CodeQualite.of(PositiveInteger.of(0)),
                    T10: -5.5,
                    QT10: CodeQualite.of(PositiveInteger.of(1)),
                    T20: -5.5,
                    QT20: CodeQualite.of(PositiveInteger.of(2)),
                    T50: -5.5,
                    QT50: CodeQualite.of(PositiveInteger.of(9)),
                    T100: -5.5,
                    QT100: CodeQualite.of(PositiveInteger.of(0)),
                    TNSOL: -5.5,
                    QTNSOL: CodeQualite.of(PositiveInteger.of(1)),
                    TN50: -5.5,
                    QTN50: CodeQualite.of(PositiveInteger.of(2)),
                    TCHAUSSEE: -5.5,
                    QTCHAUSSEE: CodeQualite.of(PositiveInteger.of(9)),
                    DHUMEC: PositiveInteger.of(4),
                    QDHUMEC: CodeQualite.of(PositiveInteger.of(0)),
                    U: Percentage.of(PositiveInteger.of(100)),
                    QU: CodeQualite.of(PositiveInteger.of(1)),
                    UN: Percentage.of(PositiveInteger.of(100)),
                    QUN: CodeQualite.of(PositiveInteger.of(2)),
                    HUN: Time.of('1230'),
                    QHUN: CodeQualite.of(PositiveInteger.of(9)),
                    UX: Percentage.of(PositiveInteger.of(100)),
                    QUX: CodeQualite.of(PositiveInteger.of(0)),
                    HUX: Time.of('1230'),
                    QHUX: CodeQualite.of(PositiveInteger.of(1)),
                    DHUMI40: PositiveInteger.of(4),
                    QDHUMI40: CodeQualite.of(PositiveInteger.of(2)),
                    DHUMI80: PositiveInteger.of(4),
                    QDHUMI80: CodeQualite.of(PositiveInteger.of(9)),
                    TSV: PositiveFloat.of(3.3),
                    QTSV: CodeQualite.of(PositiveInteger.of(0)),
                    PMER: PositiveFloat.of(3.3),
                    QPMER: CodeQualite.of(PositiveInteger.of(1)),
                    PSTAT: PositiveFloat.of(3.3),
                    QPSTAT: CodeQualite.of(PositiveInteger.of(2)),
                    PMERMIN: PositiveFloat.of(3.3),
                    QPERMIN: CodeQualite.of(PositiveInteger.of(9)),
                    GEOP: PositiveInteger.of(4),
                    QGEOP: CodeQualite.of(PositiveInteger.of(0)),
                    N: Octa.of(PositiveInteger.of(8)),
                    QN: CodeQualite.of(PositiveInteger.of(1)),
                    NBAS: Octa.of(PositiveInteger.of(8)),
                    QNBAS: CodeQualite.of(PositiveInteger.of(2)),
                    CL: CodeSynop.of('/'),
                    QCL: CodeQualite.of(PositiveInteger.of(9)),
                    CM: CodeSynop.of('/'),
                    QCM: CodeQualite.of(PositiveInteger.of(0)),
                    CH: CodeSynop.of('/'),
                    QCH: CodeQualite.of(PositiveInteger.of(1)),
                    N1: Octa.of(PositiveInteger.of(8)),
                    QN1: CodeQualite.of(PositiveInteger.of(2)),
                    C1: CodeSynop.of('/'),
                    QC1: CodeQualite.of(PositiveInteger.of(9)),
                    B1: PositiveInteger.of(4),
                    QB1: CodeQualite.of(PositiveInteger.of(0)),
                    N2: Octa.of(PositiveInteger.of(8)),
                    QN2: CodeQualite.of(PositiveInteger.of(1)),
                    C2: CodeSynop.of('/'),
                    QC2: CodeQualite.of(PositiveInteger.of(2)),
                    B2: PositiveInteger.of(4),
                    QCB2: CodeQualite.of(PositiveInteger.of(9)),
                    N3: Octa.of(PositiveInteger.of(8)),
                    QN3: CodeQualite.of(PositiveInteger.of(0)),
                    C3: CodeSynop.of('/'),
                    QC3: CodeQualite.of(PositiveInteger.of(1)),
                    B3: PositiveInteger.of(4),
                    QB3: CodeQualite.of(PositiveInteger.of(2)),
                    N4: Octa.of(PositiveInteger.of(8)),
                    QN4: CodeQualite.of(PositiveInteger.of(9)),
                    C4: CodeSynop.of('/'),
                    QC4: CodeQualite.of(PositiveInteger.of(0)),
                    B4: PositiveInteger.of(4),
                    QB4: CodeQualite.of(PositiveInteger.of(1)),
                    VV: PositiveInteger.of(4),
                    QVV: CodeQualite.of(PositiveInteger.of(2)),
                    DVV200: PositiveInteger.of(4),
                    QDVV200: CodeQualite.of(PositiveInteger.of(9)),
                    WW: CodeTemps.of('99'),
                    QWW: CodeQualite.of(PositiveInteger.of(0)),
                    W1: CodeTemps.of('99'),
                    QW1: CodeQualite.of(PositiveInteger.of(1)),
                    W2: CodeTemps.of('99'),
                    QW2: CodeQualite.of(PositiveInteger.of(2)),
                    SOL: Etat.of(PositiveInteger.of(7)),
                    QSOL: CodeQualite.of(PositiveInteger.of(9)),
                    SOLNG: Etat.of(PositiveInteger.of(7)),
                    QSOLNG: CodeQualite.of(PositiveInteger.of(0)),
                    TMER: -5.5,
                    QTMER: CodeQualite.of(PositiveInteger.of(1)),
                    VVMER: Visibility.of(PositiveInteger.of(6)),
                    QVVMER: CodeQualite.of(PositiveInteger.of(2)),
                    ETATMER: Etat.of(PositiveInteger.of(7)),
                    QETATMER: CodeQualite.of(PositiveInteger.of(9)),
                    DIRHOULE: HouleDirection.of(PositiveInteger.of(999)),
                    QDIRHOULE: CodeQualite.of(PositiveInteger.of(0)),
                    HVAGUE: PositiveFloat.of(3.3),
                    QHVAGUE: CodeQualite.of(PositiveInteger.of(1)),
                    PVAGUE: PositiveFloat.of(3.3),
                    QPVAGUE: CodeQualite.of(PositiveInteger.of(2)),
                    HNEIGEF: PositiveInteger.of(4),
                    QHNEIGEF: CodeQualite.of(PositiveInteger.of(9)),
                    NEIGETOT: PositiveInteger.of(4),
                    QNEIGETOT: CodeQualite.of(PositiveInteger.of(0)),
                    TSNEIGE: PositiveFloat.of(3.3),
                    QTSNEIGE: CodeQualite.of(PositiveInteger.of(1)),
                    TUBENEIGE: PositiveInteger.of(4),
                    QTUBENEIGE: CodeQualite.of(PositiveInteger.of(2)),
                    HNEIGEFI3: PositiveInteger.of(4),
                    QHNEIGEFI3: CodeQualite.of(PositiveInteger.of(9)),
                    HNEIGEFI1: PositiveInteger.of(4),
                    QHNEIGEFI1: CodeQualite.of(PositiveInteger.of(0)),
                    ESNEIGE: Etat.of(PositiveInteger.of(7)),
                    QESNEIGE: CodeQualite.of(PositiveInteger.of(1)),
                    CHARGENEIGE: PositiveInteger.of(4),
                    QCHARGENEIGE: CodeQualite.of(PositiveInteger.of(2)),
                    GLO: PositiveInteger.of(4),
                    QGLO: CodeQualite.of(PositiveInteger.of(9)),
                    GLO2: PositiveInteger.of(4),
                    QGLO2: CodeQualite.of(PositiveInteger.of(0)),
                    DIR: PositiveInteger.of(4),
                    QDIR: CodeQualite.of(PositiveInteger.of(1)),
                    DIR2: PositiveInteger.of(4),
                    QDIR2: CodeQualite.of(PositiveInteger.of(2)),
                    DIF: PositiveInteger.of(4),
                    QDIF: CodeQualite.of(PositiveInteger.of(9)),
                    DIF2: PositiveInteger.of(4),
                    QDIF2: CodeQualite.of(PositiveInteger.of(0)),
                    UV: PositiveInteger.of(4),
                    QUV: CodeQualite.of(PositiveInteger.of(1)),
                    UV2: PositiveInteger.of(4),
                    QUV2: CodeQualite.of(PositiveInteger.of(2)),
                    UV_INDICE: UVIndex.of(PositiveInteger.of(12)),
                    QUV_INDICE: CodeQualite.of(PositiveInteger.of(9)),
                    INFRAR: PositiveInteger.of(4),
                    QINFRAR: CodeQualite.of(PositiveInteger.of(0)),
                    INFRAR2: PositiveInteger.of(4),
                    QINFRAR2: CodeQualite.of(PositiveInteger.of(1)),
                    INS: PositiveInteger.of(4),
                    QINS: CodeQualite.of(PositiveInteger.of(2)),
                    INS2: PositiveInteger.of(4),
                    QINS2: CodeQualite.of(PositiveInteger.of(9)),
                    TLAGON: -5.5,
                    QTLAGON: CodeQualite.of(PositiveInteger.of(0)),
                    TVEGETAUX: -5.5,
                    QTVEGETAUX: CodeQualite.of(PositiveInteger.of(1)),
                    ECOULEMENT: -5.5,
                    QECOULEMENT: CodeQualite.of(PositiveInteger.of(2)),
                },
            ]);
        });
    });
});
