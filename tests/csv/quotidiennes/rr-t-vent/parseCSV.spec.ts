import { parseCSV, QuotidienneLine } from '@/csv/quotidiennes/rr-t-vent/parseCSV.js';
import { CodeQualite } from '@/data/value-objects/CodeQualite.js';
import { Integer } from '@/data/value-objects/Integer.js';
import { PositiveFloat } from '@/data/value-objects/PositiveFloat.js';
import { PositiveInteger } from '@/data/value-objects/PositiveInteger.js';
import { Time } from '@/data/value-objects/Time.js';
import { WindDirection } from '@/data/value-objects/WindDirection.js';
import {
    getAsyncGeneratorFromArray,
    getResultsArraysFromAsyncResultGenerator,
} from '@/lib/generator/generatorUtils.js';
import { NumeroPoste } from '@/postes/NumeroPoste.js';
import { describe, expect, it } from 'vitest';

describe('parseCSV', () => {
    describe('parseCSV', () => {
        it('should parse the CSV', async () => {
            const csvLines = getAsyncGeneratorFromArray([
                'NUM_POSTE;NOM_USUEL;LAT;LON;ALTI;AAAAMMJJ;RR;QRR;TN;QTN;HTN;QHTN;TX;QTX;HTX;QHTX;TM;QTM;TNTXM;QTNTXM;TAMPLI;QTAMPLI;TNSOL;QTNSOL;TN50;QTN50;DG;QDG;FFM;QFFM;FF2M;QFF2M;FXY;QFXY;DXY;QDXY;HXY;QHXY;FXI;QFXI;DXI;QDXI;HXI;QHXI;FXI2;QFXI2;DXI2;QDXI2;HXI2;QHXI2;FXI3S;QFXI3S;DXI3S;QDXI3S;HXI3S;QHXI3S;DRR;QDRR',
                '01014002;ARBENT;46.278167;5.669000;534;20230101;0.0;1;11.6;1;115;9;17.7;1;1123;9;14.3;1;14.7;1;6.1;1;;;;;0;9;4.8;1;;;6.8;1;160;1;947;9;14.8;1;200;9;1943;9;;;;;;;13.6;9;;;1135;9;;',
                '01014002;ARBENT;46.278167;5.669000;534;20230102;11.0;1;8.6;1;1746;9;14.3;1;846;9;11.5;1;11.5;1;5.7;1;;;;;0;9;3.0;1;;;6.3;1;200;1;1001;9;14.4;1;180;1;954;9;;;;;;;12.0;9;;;955;9;;',
                '01014002;ARBENT;46.278167;5.669000;534;20230103;1.1;9;-2.2;9;1230;9;-2.2;9;1230;9;-2.2;9;-2.2;9;1.1;9;-2.2;9;-2.2;9;3;9;1.1;9;1.1;9;1.1;9;360;9;1230;9;1.1;9;360;9;1230;9;1.1;9;360;9;1230;9;1.1;9;360;9;1230;9;3;9',
                '01014002;ARBENT;46.278167;5.669000;534;20230104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
                '',
            ]);
            const infrahoraireLines = await getResultsArraysFromAsyncResultGenerator(parseCSV(csvLines));
            expect(infrahoraireLines.ok).toEqual<QuotidienneLine[]>([
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJ: new Date('2023-01-01T00:00:00Z'),
                    RR: PositiveFloat.of(0.0),
                    QRR: CodeQualite.of(Integer.of(1)),
                    TN: 11.6,
                    QTN: CodeQualite.of(Integer.of(1)),
                    HTN: Time.of('0115'),
                    QHTN: CodeQualite.of(Integer.of(9)),
                    TX: 17.7,
                    QTX: CodeQualite.of(Integer.of(1)),
                    HTX: Time.of('1123'),
                    QHTX: CodeQualite.of(Integer.of(9)),
                    TM: 14.3,
                    QTM: CodeQualite.of(Integer.of(1)),
                    TNTXM: 14.7,
                    QTNTXM: CodeQualite.of(Integer.of(1)),
                    TAMPLI: PositiveFloat.of(6.1),
                    QTAMPLI: CodeQualite.of(Integer.of(1)),
                    TNSOL: null,
                    QTNSOL: CodeQualite.of(Integer.of(null)),
                    TN50: null,
                    QTN50: CodeQualite.of(Integer.of(null)),
                    DG: PositiveInteger.of(0),
                    QDG: CodeQualite.of(Integer.of(9)),
                    FFM: PositiveFloat.of(4.8),
                    QFFM: CodeQualite.of(Integer.of(1)),
                    FF2M: PositiveFloat.of(null),
                    QFF2M: CodeQualite.of(Integer.of(null)),
                    FXY: PositiveFloat.of(6.8),
                    QFXY: CodeQualite.of(Integer.of(1)),
                    DXY: WindDirection.of(PositiveInteger.of(160)),
                    QDXY: CodeQualite.of(Integer.of(1)),
                    HXY: Time.of('0947'),
                    QHXY: CodeQualite.of(Integer.of(9)),
                    FXI: PositiveFloat.of(14.8),
                    QFXI: CodeQualite.of(Integer.of(1)),
                    DXI: WindDirection.of(PositiveInteger.of(200)),
                    QDXI: CodeQualite.of(Integer.of(9)),
                    HXI: Time.of('1943'),
                    QHXI: CodeQualite.of(Integer.of(9)),
                    FXI2: PositiveFloat.of(null),
                    QFXI2: CodeQualite.of(Integer.of(null)),
                    DXI2: WindDirection.of(PositiveInteger.of(null)),
                    QDXI2: CodeQualite.of(Integer.of(null)),
                    HXI2: Time.of(''),
                    QHXI2: CodeQualite.of(Integer.of(null)),
                    FXI3S: PositiveFloat.of(13.6),
                    QFXI3S: CodeQualite.of(Integer.of(9)),
                    DXI3S: WindDirection.of(PositiveInteger.of(null)),
                    QDXI3S: CodeQualite.of(Integer.of(null)),
                    HXI3S: Time.of('1135'),
                    QHXI3S: CodeQualite.of(Integer.of(9)),
                    DRR: PositiveInteger.of(null),
                    QDRR: CodeQualite.of(Integer.of(null)),
                },
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJ: new Date('2023-01-02T00:00:00Z'),
                    RR: PositiveFloat.of(11.0),
                    QRR: CodeQualite.of(Integer.of(1)),
                    TN: 8.6,
                    QTN: CodeQualite.of(Integer.of(1)),
                    HTN: Time.of('1746'),
                    QHTN: CodeQualite.of(Integer.of(9)),
                    TX: 14.3,
                    QTX: CodeQualite.of(Integer.of(1)),
                    HTX: Time.of('846'),
                    QHTX: CodeQualite.of(Integer.of(9)),
                    TM: 11.5,
                    QTM: CodeQualite.of(Integer.of(1)),
                    TNTXM: 11.5,
                    QTNTXM: CodeQualite.of(Integer.of(1)),
                    TAMPLI: PositiveFloat.of(5.7),
                    QTAMPLI: CodeQualite.of(Integer.of(1)),
                    TNSOL: null,
                    QTNSOL: CodeQualite.of(Integer.of(null)),
                    TN50: null,
                    QTN50: CodeQualite.of(Integer.of(null)),
                    DG: PositiveInteger.of(0),
                    QDG: CodeQualite.of(Integer.of(9)),
                    FFM: PositiveFloat.of(3.0),
                    QFFM: CodeQualite.of(Integer.of(1)),
                    FF2M: PositiveFloat.of(null),
                    QFF2M: CodeQualite.of(Integer.of(null)),
                    FXY: PositiveFloat.of(6.3),
                    QFXY: CodeQualite.of(Integer.of(1)),
                    DXY: WindDirection.of(PositiveInteger.of(200)),
                    QDXY: CodeQualite.of(Integer.of(1)),
                    HXY: Time.of('1001'),
                    QHXY: CodeQualite.of(Integer.of(9)),
                    FXI: PositiveFloat.of(14.4),
                    QFXI: CodeQualite.of(Integer.of(1)),
                    DXI: WindDirection.of(PositiveInteger.of(180)),
                    QDXI: CodeQualite.of(Integer.of(1)),
                    HXI: Time.of('0954'),
                    QHXI: CodeQualite.of(Integer.of(9)),
                    FXI2: PositiveFloat.of(null),
                    QFXI2: CodeQualite.of(Integer.of(null)),
                    DXI2: WindDirection.of(PositiveInteger.of(null)),
                    QDXI2: CodeQualite.of(Integer.of(null)),
                    HXI2: Time.of(''),
                    QHXI2: CodeQualite.of(Integer.of(null)),
                    FXI3S: PositiveFloat.of(12.0),
                    QFXI3S: CodeQualite.of(Integer.of(9)),
                    DXI3S: WindDirection.of(PositiveInteger.of(null)),
                    QDXI3S: CodeQualite.of(Integer.of(null)),
                    HXI3S: Time.of('0955'),
                    QHXI3S: CodeQualite.of(Integer.of(9)),
                    DRR: PositiveInteger.of(null),
                    QDRR: CodeQualite.of(Integer.of(null)),
                },
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJ: new Date('2023-01-03T00:00:00Z'),
                    RR: PositiveFloat.of(1.1),
                    QRR: CodeQualite.of(Integer.of(9)),
                    TN: -2.2,
                    QTN: CodeQualite.of(Integer.of(9)),
                    HTN: Time.of('1230'),
                    QHTN: CodeQualite.of(Integer.of(9)),
                    TX: -2.2,
                    QTX: CodeQualite.of(Integer.of(9)),
                    HTX: Time.of('1230'),
                    QHTX: CodeQualite.of(Integer.of(9)),
                    TM: -2.2,
                    QTM: CodeQualite.of(Integer.of(9)),
                    TNTXM: -2.2,
                    QTNTXM: CodeQualite.of(Integer.of(9)),
                    TAMPLI: PositiveFloat.of(1.1),
                    QTAMPLI: CodeQualite.of(Integer.of(9)),
                    TNSOL: -2.2,
                    QTNSOL: CodeQualite.of(Integer.of(9)),
                    TN50: -2.2,
                    QTN50: CodeQualite.of(Integer.of(9)),
                    DG: PositiveInteger.of(3),
                    QDG: CodeQualite.of(Integer.of(9)),
                    FFM: PositiveFloat.of(1.1),
                    QFFM: CodeQualite.of(Integer.of(9)),
                    FF2M: PositiveFloat.of(1.1),
                    QFF2M: CodeQualite.of(Integer.of(9)),
                    FXY: PositiveFloat.of(1.1),
                    QFXY: CodeQualite.of(Integer.of(9)),
                    DXY: WindDirection.of(PositiveInteger.of(360)),
                    QDXY: CodeQualite.of(Integer.of(9)),
                    HXY: Time.of('1230'),
                    QHXY: CodeQualite.of(Integer.of(9)),
                    FXI: PositiveFloat.of(1.1),
                    QFXI: CodeQualite.of(Integer.of(9)),
                    DXI: WindDirection.of(PositiveInteger.of(360)),
                    QDXI: CodeQualite.of(Integer.of(9)),
                    HXI: Time.of('1230'),
                    QHXI: CodeQualite.of(Integer.of(9)),
                    FXI2: PositiveFloat.of(1.1),
                    QFXI2: CodeQualite.of(Integer.of(9)),
                    DXI2: WindDirection.of(PositiveInteger.of(360)),
                    QDXI2: CodeQualite.of(Integer.of(9)),
                    HXI2: Time.of('1230'),
                    QHXI2: CodeQualite.of(Integer.of(9)),
                    FXI3S: PositiveFloat.of(1.1),
                    QFXI3S: CodeQualite.of(Integer.of(9)),
                    DXI3S: WindDirection.of(PositiveInteger.of(360)),
                    QDXI3S: CodeQualite.of(Integer.of(9)),
                    HXI3S: Time.of('1230'),
                    QHXI3S: CodeQualite.of(Integer.of(9)),
                    DRR: PositiveInteger.of(3),
                    QDRR: CodeQualite.of(Integer.of(9)),
                },
                {
                    NUM_POSTE: NumeroPoste.of('01014002'),
                    NOM_USUEL: 'ARBENT',
                    LAT: 46.278167,
                    LON: 5.669,
                    ALTI: 534,
                    AAAAMMJJ: new Date('2023-01-04T00:00:00Z'),
                    RR: PositiveFloat.of(null),
                    QRR: CodeQualite.of(Integer.of(null)),
                    TN: null,
                    QTN: CodeQualite.of(Integer.of(null)),
                    HTN: Time.of(''),
                    QHTN: CodeQualite.of(Integer.of(null)),
                    TX: null,
                    QTX: CodeQualite.of(Integer.of(null)),
                    HTX: Time.of(''),
                    QHTX: CodeQualite.of(Integer.of(null)),
                    TM: null,
                    QTM: CodeQualite.of(Integer.of(null)),
                    TNTXM: null,
                    QTNTXM: CodeQualite.of(Integer.of(null)),
                    TAMPLI: PositiveFloat.of(null),
                    QTAMPLI: CodeQualite.of(Integer.of(null)),
                    TNSOL: null,
                    QTNSOL: CodeQualite.of(Integer.of(null)),
                    TN50: null,
                    QTN50: CodeQualite.of(Integer.of(null)),
                    DG: PositiveInteger.of(null),
                    QDG: CodeQualite.of(Integer.of(null)),
                    FFM: PositiveFloat.of(null),
                    QFFM: CodeQualite.of(Integer.of(null)),
                    FF2M: PositiveFloat.of(null),
                    QFF2M: CodeQualite.of(Integer.of(null)),
                    FXY: PositiveFloat.of(null),
                    QFXY: CodeQualite.of(Integer.of(null)),
                    DXY: WindDirection.of(PositiveInteger.of(null)),
                    QDXY: CodeQualite.of(Integer.of(null)),
                    HXY: Time.of(''),
                    QHXY: CodeQualite.of(Integer.of(null)),
                    FXI: PositiveFloat.of(null),
                    QFXI: CodeQualite.of(Integer.of(null)),
                    DXI: WindDirection.of(PositiveInteger.of(null)),
                    QDXI: CodeQualite.of(Integer.of(null)),
                    HXI: Time.of(''),
                    QHXI: CodeQualite.of(Integer.of(null)),
                    FXI2: PositiveFloat.of(null),
                    QFXI2: CodeQualite.of(Integer.of(null)),
                    DXI2: WindDirection.of(PositiveInteger.of(null)),
                    QDXI2: CodeQualite.of(Integer.of(null)),
                    HXI2: Time.of(''),
                    QHXI2: CodeQualite.of(Integer.of(null)),
                    FXI3S: PositiveFloat.of(null),
                    QFXI3S: CodeQualite.of(Integer.of(null)),
                    DXI3S: WindDirection.of(PositiveInteger.of(null)),
                    QDXI3S: CodeQualite.of(Integer.of(null)),
                    HXI3S: Time.of(''),
                    QHXI3S: CodeQualite.of(Integer.of(null)),
                    DRR: PositiveInteger.of(null),
                    QDRR: CodeQualite.of(Integer.of(null)),
                },
            ]);
        });
    });
});
